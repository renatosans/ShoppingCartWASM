
@inject Modal modalRef;

<div class='vertical-container rounded-corners'>
    <img class='productImage' src='@produto.imagem' >
    <span> @produto.nome </span> <br/>
    <span> @produto.descricao </span> <br/>
    <span> Preço: R$ @produto.preco</span> <br/>
    <button class='roundIcon addToCart' @onclick="addToCart" />
</div>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader><b>Informação</b></ModalHeader>
        <ModalBody>@modalContent</ModalBody>
        <ModalFooter>
            <Button Color="Color.Primary" Clicked="@HideModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public Produto? produto { get; set; }

    [Parameter]
    public ShoppingCart? shoppingCart { get; set; }

    // Última mensagem exibida ao usuário
    private String modalContent = "";

    private Task ShowModal(String displayText)
    {
        this.modalContent = displayText;
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }
    private void addToCart()
    {
        if (produto is null) return;
        if (shoppingCart is null) return;

        List<Produto> match = shoppingCart.produtosAdicionados.FindAll(item => item.id == produto.id);
        if (match.Count > 0) {
            ShowModal("Este produto já se encontra no carrinho!");
            return;
        }

        shoppingCart.adicionar(produto);
        ShowModal("Produto adicionado ao carrinho.");
    }

}
